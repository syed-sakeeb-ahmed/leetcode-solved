/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
vector<pair<int,TreeNode*>> g;
void aux(TreeNode* root,int level) {
    if (root == nullptr) {
        return;
    }
    
    aux(root->left, level + 1);
    g.push_back({level,root});
    aux(root->right, level + 1);
    
}
public:
    bool isSymmetric(TreeNode* root) {
        aux(root,0);
        int left = 0;
        int right = g.size() - 1;
        bool res = true;
        
        while (left <= right) {
            if (g[left].second->val == g[right].second->val && g[left].first == g[right].first) {
                left++;right--;
            }
            else {
                res = false;
                break;
            }
        }
        return res;
    }
};