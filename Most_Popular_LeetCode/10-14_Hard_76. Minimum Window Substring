class Solution {
unordered_map<char,int> mp;

public:
    string minWindow(string s, string t) {
        for (int i = 0; i < t.length(); i++) {
            mp[t[i]]++;
        }
        int left = 0;
        int right = 0;
        int count = 0;
        int n = t.length();
        int best = INT_MAX;
        int start = 0,end = -1;
        while (right < s.length()) {
            char c = s[right];
            mp[c]--;
            if (mp[c] >= 0) count++;
            while (count == n) {
                int len = right - left + 1;
                if (len < best) {
                    best = len;
                    start = left;
                    end = right;
                }
                mp[s[left]]++;
                if (mp[s[left]] > 0) count--;
                left++;
            }
            right++;
        }
        return s.substr(start,end-start+1);
    }
};