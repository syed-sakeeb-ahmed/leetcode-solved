class Solution {
public:
    int coinChange(vector<int>& coins, int amount) {
        if (amount == 0) return 0;
        int n = amount + 1;
        vector<int> mem(n,INT_MAX);
        mem[0] = 0;
        for (int i = 0; i < coins.size(); i++) {
            if (coins[i] < n) mem[coins[i]] = 1;
        }

        for (int i = 0; i < mem.size(); i++) {
            if (mem[i] != INT_MAX) continue;
            int temp = INT_MAX;
            for (int j = 0; j < coins.size(); j++) {
                if (i - coins[j] >= 0) {
                    if (mem[i - coins[j]] != INT_MAX) {
                        temp = min(temp, mem[i - coins[j]] + 1);
                    }
                }
            }
            mem[i] = temp;
        }
        int res = (mem[n-1] == INT_MAX) ? -1 : mem[n-1];
        return res;
    }
};