/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        if (root == NULL) return {};
        queue<pair<int,TreeNode*>> q;
        vector<vector<int>> res;
        q.push({0,root});
        int curr = 0;
        vector<int> rTemp;
        while(!q.empty()) {
            auto pp = q.front(); q.pop();
            TreeNode* temp = pp.second;
            if (pp.first > curr) {
                res.push_back(rTemp);
                curr = pp.first;
                rTemp.clear();
            }
            rTemp.push_back(temp->val);
            if (temp->left) q.push({pp.first + 1,temp->left});
            if (temp->right) q.push({pp.first + 1, temp->right});
        }
        res.push_back(rTemp);
        return res;
    }
};