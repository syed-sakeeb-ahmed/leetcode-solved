/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        priority_queue<int, vector<int>, greater<int>> pq;
        for (int i = 0; i < lists.size(); i++) {
            ListNode* head = lists[i];
            while (head != nullptr) {
                pq.push(head->val);
                head = head->next;
            }
        }
        ListNode* head = new ListNode();
        ListNode* curr = head;
        ListNode* prev = nullptr;
        while(!pq.empty()) {
            curr->val = pq.top(); pq.pop();
            curr->next = new ListNode();
            prev = curr;
            curr = curr->next;
        }
        if (prev == nullptr) return nullptr;
        prev->next = nullptr;
        return head;
    }
};