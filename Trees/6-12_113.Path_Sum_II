/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    void solver(TreeNode*& root, int& targetSum, vector<int>& t, vector<vector<int>>& output, int sum) {
        if (root == NULL) return;
        sum += root->val;
        t.push_back(root->val);

        if (!root->left && !root->right) {
            if (targetSum == sum) {
                output.push_back(t);
            }
        }

        solver(root->left, targetSum, t, output, sum);
        solver(root->right, targetSum, t, output, sum);

        t.pop_back();

    }
public:
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> output;
        vector<int> t;
        int sum = 0;
        if (root == nullptr) return output;
        solver(root, targetSum, t, output, sum);
        return output;
    }
};