class Solution {
public:
    int longestPalindromeSubseq(string s) {
        int n = s.length();
        vector<vector<int>> r(n, vector<int>(n, 0));
        for (int i = 0; i < n; i++) {
            r[i][i] = 1;
        }

        for (int i = 0; i < n; i++) {
            int begin = 0;
            for (int j = i+1; j < n; j++) {
                //cout << begin << " " << j << ", ";
                if (s[begin] == s[j]) {
                    r[begin][j] = 2 + r[begin+1][j-1];
                }
                else {
                    r[begin][j] = max(r[begin+1][j], r[begin][j-1]);
                }
                begin++;
            }
            //cout << endl;
        }
        return r[0][n-1];
    }
};