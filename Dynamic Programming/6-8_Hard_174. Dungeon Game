class Solution {
public:
    int calculateMinimumHP(vector<vector<int>>& dungeon) {
        if (dungeon.size() == 0) return 0;
        int m = dungeon.size();
        int n = dungeon[0].size();
        vector<vector<int>> r(m, vector<int>(n, 0));
        r[m - 1][n - 1] = (dungeon[m -1 ][n-1] < 0) ? (dungeon[m-1][n-1] * -1 + 1) : 1;
        for (int i = m - 1; i >=0; i--) {
            for (int j = n - 1; j >= 0; j--) {
                if (i == m - 1 && j == n - 1) continue;
                int right = (j + 1 < n) ? r[i][j + 1] : INT_MAX;
                int bot = (i + 1 < m) ? r[i + 1][j] : INT_MAX;
                int val = (-1 * dungeon[i][j]);
                int chosen = min(bot, right);
                int finalVal = max(1, chosen + val);
                r[i][j] = finalVal;
            }
        }
        return r[0][0];
    }
};