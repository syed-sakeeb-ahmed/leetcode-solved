class Solution {
public:
    string longestPalindrome(string s) {
        string ns;
        ns.reserve(s.length() * 2 + 1);
        for (int i = 0; i < s.length(); i++) {
            ns += "*";
            ns += s[i];
        }
        ns += "*";
        int max = INT_MIN;
        int l, r;
        int L,R;
        for (int i = 0; i < ns.length(); i++) {
            l = i - 1;
            r = i + 1;
            int count = (ns[i] == '*') ? 0 : 1;
            while (l >= 0 && r < ns.length()) {
                if (ns[l] == ns[r]) {
                    if (ns[l] != '*') {
                        count += 2;
                    }
                    l--;
                    r++;
                }
                else break;
            }
            if (count > max) {
                L = l + 1;
                R = r - 1;
                max = count;
            }
        }

        string res;
        res.reserve(R - L + 1);
        for (int i = L; i <= R; i++) {
            if (ns[i] != '*') {
                res += ns[i];
            }
        }
        return res;
    }
};